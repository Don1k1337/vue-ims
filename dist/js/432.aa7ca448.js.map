{"version":3,"file":"js/432.aa7ca448.js","mappings":"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","sources":["webpack://vue-ims-app/./src/views/Auth.vue","webpack://vue-ims-app/./src/use/login-form.js","webpack://vue-ims-app/./src/views/Auth.vue?30a9"],"sourcesContent":["<template>\n  <form class=\"card\" @submit.prevent=\"onSubmit\">\n    <h1>Authorization</h1>\n\n    <div :class=\"['form-control', {invalid: eError}]\">\n      <label for=\"email\">E-mail</label>\n      <input type=\"email\" id=\"email\" v-model=\"email\" @blur=\"eBlur\">\n      <small v-if=\"eError\">{{ eError }}</small>\n    </div>\n\n    <div :class=\"['form-control', {invalid: pError}]\">\n      <label for=\"password\">Password</label>\n      <input type=\"password\" id=\"password\" v-model=\"password\" @blur=\"pBlur\">\n      <small v-if=\"pError\">{{ pError }}</small>\n    </div>\n\n    <button class=\"btn primary\" type=\"submit\" :disabled=\"isSubmitting || isTooManyAttempts\">Login</button>\n    <div class=\"text-danger\" v-if=\"isTooManyAttempts\">\n      You performed too many attempts, please try again later\n    </div>\n  </form>\n</template>\n\n<script>\nimport {useRoute} from \"vue-router\";\nimport {useStore} from \"vuex\";\nimport {useLoginForm} from \"../use/login-form\";\nimport {error} from \"../utils/error\";\n\nexport default {\n  name: \"Auth\",\n  setup() {\n    const route = useRoute()\n    const store = useStore()\n    if (route.query.message) {\n      store.dispatch('setMessage', {\n        value: error(route.query.message),\n        type: 'warning',\n      })\n    }\n\n\n    return {\n      ...useLoginForm()\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>","import {useField, useForm} from \"vee-validate\";\nimport * as yup from \"yup\";\nimport {computed, watch} from \"vue\";\nimport {useStore} from \"vuex\";\nimport {useRouter} from \"vue-router\";\n\nexport function useLoginForm() {\n    const store = useStore()\n    const router = useRouter()\n    const {handleSubmit, isSubmitting, submitCount} = useForm()\n    const {value: email, errorMessage: eError, handleBlur: eBlur} = useField(\n        'email',\n        yup\n            .string()\n            .trim()\n            .required('Please check that the email field is filled in correctly')\n            .email('Note, you need to specify the correct address of your email')\n    )\n    const PWD_MIN_LENGTH = 6\n    const {value: password, errorMessage: pError, handleBlur: pBlur} = useField(\n        'password',\n        yup\n            .string()\n            .trim()\n            .required('Please check that the password field is filled in correctly')\n            .min(PWD_MIN_LENGTH,\n                `Note, length of your password\n                 must have at least ${PWD_MIN_LENGTH} symbols`\n            )\n    )\n    const isTooManyAttempts = computed(() => submitCount.value >= 3)\n    watch(isTooManyAttempts, value => {\n        if(value) {\n            setTimeout(() => submitCount.value = 0, 10000)\n        }\n    })\n\n    const onSubmit = handleSubmit(async values => {\n        try {\n            await store.dispatch('auth/login', values)\n            await router.push('/')\n        }\n            catch(e) {}\n    })\n    return {\n        email,\n        password,\n        eError,\n        pError,\n        eBlur,\n        pBlur,\n        onSubmit,\n        isSubmitting,\n        isTooManyAttempts\n    }\n}","import { render } from \"./Auth.vue?vue&type=template&id=21c13ed7\"\nimport script from \"./Auth.vue?vue&type=script&lang=js\"\nexport * from \"./Auth.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/dominus/WebstormProjects/vue-ims/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","for","class","_createElementBlock","onSubmit","_ctx","_hoisted_1","_normalizeClass","invalid","_hoisted_2","type","id","onBlur","_hoisted_4","disabled","_hoisted_7","useLoginForm","store","useStore","router","useRouter","useForm","handleSubmit","isSubmitting","submitCount","useField","yup","trim","required","email","value","eError","errorMessage","eBlur","handleBlur","PWD_MIN_LENGTH","min","password","pError","pBlur","isTooManyAttempts","computed","watch","setTimeout","values","dispatch","push","name","setup","route","useRoute","query","message","error","__exports__","render"],"sourceRoot":""}